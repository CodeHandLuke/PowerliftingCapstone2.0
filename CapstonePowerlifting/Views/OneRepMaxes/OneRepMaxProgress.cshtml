@{
	ViewData["Title"] = "OneRepMaxProgress";
}

	<h1>One-rep max progression line chart</h1>

<script src="https://code.jquery.com/jquery-3.4.1.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
<script src="https://d3js.org/d3.v5.min.js"></script>
@*<link rel="stylesheet" href="~/css/styles.css">*@

<div id="chart"></div>

<script>
	(function () {

		$.ajax({
			type: "GET",
			url: "CreateLineGraph",
			contentType: "application/json; charset=utf-8",
			dataType: "json",
			success: function (result) {
				console.log(result);
				var width = 800;
				var height = 500;
				var margin = 100;
				var duration = 250;

				var lineOpacity = "0.25";
				var lineOpacityHover = "0.85";
				var otherLinesOpacityHover = "0.1";
				var lineStroke = "1.5px";
				var lineStrokeHover = "2.5px";

				var circleOpacity = '0.85';
				var circleOpacityOnLineHover = "0.25"
				var circleRadius = 3;
				var circleRadiusHover = 6;
				var data = result;

				/* Format Data */
				var parseDate = d3.timeParse("%m/%Y");
				data.forEach(function(d) { 
				  d.OneRepMaxValues.forEach(function(d) {
					  d.Date = parseDate(d.Date);
				  });
				});

				/* Scale */
				var xScale = d3.scaleTime()
					.domain(d3.extent(data[0].OneRepMaxValues, d => d.Date))
					.range([0, width - margin]);

				var yScale = d3.scaleLinear()
					.domain([0, d3.max(data[0].OneRepMaxValues, d => d.Weight)])
					.range([height - margin, 0]);

				var color = d3.scaleOrdinal(d3.schemeCategory10);

				/* Add SVG */
				var svg = d3.select("#chart").append("svg")
					.attr("width", (width + margin) + "px")
					.attr("height", (height + margin) + "px")
					.append('g')
					.attr("transform", `translate(${margin}, ${margin})`);


				/* Add line into SVG */
				var line = d3.line()
					.x(d => xScale(d.Date))
					.y(d => yScale(d.Weight));

				let lines = svg.append('g')
					.attr('class', 'lines');

				lines.selectAll('.line-group')
					.data(data).enter()
					.append('g')
					.attr('class', 'line-group')
					.on("mouseover", function (d, i) {
						svg.append("text")
							.attr("class", "title-text")
							.style("fill", color(i))
							.text(d.Name)
							.attr("text-anchor", "middle")
							.attr("x", (width - margin) / 2)
							.attr("y", 5);
					})
					.on("mouseout", function (d) {
						svg.select(".title-text").remove();
					})
					.append('path')
					.attr('class', 'line')
					.attr('d', d => line(d.OneRepMaxValues))
					.style('stroke', (d, i) => color(i))
					.style('opacity', lineOpacity)
					.on("mouseover", function (d) {
						d3.selectAll('.line')
							.style('opacity', otherLinesOpacityHover);
						d3.selectAll('.circle')
							.style('opacity', circleOpacityOnLineHover);
						d3.select(this)
							.style('opacity', lineOpacityHover)
							.style("stroke-width", lineStrokeHover)
							.style("cursor", "pointer");
					})
					.on("mouseout", function (d) {
						d3.selectAll(".line")
							.style('opacity', lineOpacity);
						d3.selectAll('.circle')
							.style('opacity', circleOpacity);
						d3.select(this)
							.style("stroke-width", lineStroke)
							.style("cursor", "none");
					});


				/* Add circles in the line */
				lines.selectAll("circle-group")
					.data(data).enter()
					.append("g")
					.style("fill", (d, i) => color(i))
					.selectAll("circle")
					.data(d => d.OneRepMaxValues).enter()
					.append("g")
					.attr("class", "circle")
					.on("mouseover", function (d) {
						d3.select(this)
							.style("cursor", "pointer")
							.append("text")
							.attr("class", "text")
							.text(`${d.Weight}`)
							.attr("x", d => xScale(d.Date) + 5)
							.attr("y", d => yScale(d.Weight) - 10);
					})
					.on("mouseout", function (d) {
						d3.select(this)
							.style("cursor", "none")
							.transition()
							.duration(duration)
							.selectAll(".text").remove();
					})
					.append("circle")
					.attr("cx", d => xScale(d.Date))
					.attr("cy", d => yScale(d.Weight))
					.attr("r", circleRadius)
					.style('opacity', circleOpacity)
					.on("mouseover", function (d) {
						d3.select(this)
							.transition()
							.duration(duration)
							.attr("r", circleRadiusHover);
					})
					.on("mouseout", function (d) {
						d3.select(this)
							.transition()
							.duration(duration)
							.attr("r", circleRadius);
					});


				/* Add Axis into SVG */
				var xAxis = d3.axisBottom(xScale).ticks(5);
				var yAxis = d3.axisLeft(yScale).ticks(5);

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", `translate(0, ${height - margin})`)
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.call(yAxis)
					.append('text')
					.attr("y", 15)
					.attr("transform", "rotate(-90)")
					.attr("fill", "#000");
					//.text("Total weight");
			},
			error: function (msg) {
				$("#result").text(msg);
			}
		})
	})();
</script>

<p style="text-align:left;">This line chart represents a monthly progression of your one-rep maxes for squat, bench and deadlift. Hover over the different lines to see which lift it represents. Hovering over the point will show you the exact weight lifted that month.</p>